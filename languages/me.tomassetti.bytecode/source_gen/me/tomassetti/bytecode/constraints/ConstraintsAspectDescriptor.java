package me.tomassetti.bytecode.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x1695a3631a534cdcL) {
      return new Unsigned1Byte_Constraints();
    }
    if (id == 0x7c4483a34b599febL) {
      return new InstructionTypeReference_Constraints();
    }
    if (id == 0x40880d8921831cd4L) {
      return new ClassFile_Constraints();
    }
    if (id == 0x6586c93ddfed7abfL) {
      return new LdcPointer_Constraints();
    }
    if (id == 0x1695a3631a43d37eL) {
      return new ConstantPoolElement_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
